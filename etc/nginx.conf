#[program:nginx]
#directory = /usr/local/openresty/nginx
#command=/usr/local/openresty/nginx/sbin/nginx -c /usr/local/openresty/nginx/conf/nginx.conf
#autostart = true
#autorestart = true
#redirect_stderr=true
#stdout_logfile=/usr/local/openresty/nginx/logs/error.log

worker_processes  1;
worker_rlimit_nofile 8192;
error_log stderr;
daemon off;
#pcre_jit on;

events {
    worker_connections  1024;
    multi_accept on;
    use epoll;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format ltsv 'time:$time_local\t'
                    'host:$remote_addr\t'
                    "reqtime:$request_time\t"
                    "apptime:$upstream_response_time\t"
                    'api_key:$http_x_api_key\t'
                    'req:$request\t'
                    'status:$status\t'
                    'size:$body_bytes_sent\t'
                    'referer:$http_referer\t'
                    'ua:$http_user_agent'
    ;

    access_log  logs/access.log  ltsv;
    #access_log  off;

    sendfile       on;
    tcp_nopush     on;
    tcp_nodelay    on;
    server_tokens  off;
    client_max_body_size 24m;
    client_body_buffer_size 128k;
    #keepalive_timeout   0;
    keepalive_timeout  65;
    keepalive_requests 10000;
    #send_timeout  5;
    #reset_timedout_connection  on;

    #gzip_static on;

    #open_file_cache max=200000 inactive=20s;
    #open_file_cache_valid 30s;
    #open_file_cache_min_uses 2;
    #open_file_cache_errors on;

    #proxy_cache_path /var/lib/nginx/cache levels=1:2 keys_zone=isucon3:512m inactive=1d max_size=1g;
    #proxy_temp_path  /var/tmp/nginx;
    #proxy_cache_key  "$scheme://$host$request_uri";

    upstream backend {
        server 127.0.0.1:5000;
        keepalive  10;
    }

    upstream center {
        server 10.11.9.101:5000;
    }

    server {
        listen       80;
        server_name  localhost;

        location ^~ /(css|js|images) {
            root /home/isucon/webapp/public;
            expires 1d;
        }

        location = / {
            root /home/isucon/webapp/public;
            expires 1d;
        }

        location / {
            if ($request_method != GET) {
                return 302;
            }
            error_page 302 @center;

            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header is_decoy "true"
            proxy_pass http://backend;
        }

        location @center {
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_pass http://center;
        }
    }
}
